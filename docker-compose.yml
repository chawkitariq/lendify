version: "3"
services:
  database:
    image: postgis/postgis:13-master
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "directus"
      POSTGRES_PASSWORD: "directus"
      POSTGRES_DB: "directus"
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=directus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  cache:
    image: redis:6
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  directus:
    image: directus/directus:11.5.1
    ports:
      - 8055:8055
    volumes:
      - uploads:/directus/uploads
      - extensions:/directus/extensions
      - ./db-snapshot:/directus/db-snapshot
    command: ["sh", "-c", "npx directus bootstrap && npx directus schema apply -y ./db-snapshot && npx directus start"]
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: "replace-with-secure-random-value"

      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: "directus"
      DB_PASSWORD: "directus"

      CORS_ENABLED: "true"
      CORS_ORIGIN: "*"

      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"

      ADMIN_EMAIL: "admin@email.com"
      ADMIN_PASSWORD: "password"
  
  app:
    image: node:23-slim
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 4200:4200
    command: ["sh", "-c", "npm install --legacy-peer-deps && npm run start:docker"]
    restart: unless-stopped
    depends_on:
      - directus

volumes:
  database:
  uploads:
  extensions: